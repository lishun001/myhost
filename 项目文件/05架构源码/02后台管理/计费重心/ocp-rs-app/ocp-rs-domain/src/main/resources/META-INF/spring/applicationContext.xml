<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:aop="http://www.springframework.org/schema/aop"  xmlns:p="http://www.springframework.org/schema/p"  
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
    
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"  
          destroy-method="close">  
        <!-- 数据库驱动 -->  
        <property name="driverClass" value="${jdbc.driverClassName}" />  
        <!-- 相应驱动的jdbcUrl,你懂的 -->  
        <property name="jdbcUrl" value="${jdbc.url}" />  
        <!-- 数据库的用户名 -->  
        <property name="username" value="${jdbc.username}" />  
        <!-- 数据库的密码 -->  
        <property name="password" value="${jdbc.password}" />  
        
        <!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->  
        <property name="idleConnectionTestPeriod" value="${bonecp.idleConnectionTestPeriod}" />  
        <!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->  
        <property name="idleMaxAge" value="${bonecp.idleMaxAge}" />  
        <!-- 每个分区最大的连接数 -->  
        <property name="maxConnectionsPerPartition" value="${bonecp.maxConnectionsPerPartition}" />  
        <!-- 每个分区最小的连接数 -->  
        <property name="minConnectionsPerPartition" value="${bonecp.minConnectionsPerPartition}" />  
        <!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定-->  
        <property name="partitionCount" value="${bonecp.partitionCount}" />  
        <!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->  
        <property name="acquireIncrement" value="${bonecp.acquireIncrement}" />  
        <!-- 连接超时时间 -->  
        <property name="connectionTimeout" value="${bonecp.connectionTimeout}" />  
        <!-- 缓存prepared statements的大小，默认值：0 -->  
        <property name="statementsCacheSize" value="${bonecp.statementsCacheSize}" />  
        <!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->  
        <property name="releaseHelperThreads" value="${bonecp.releaseHelperThreads}" />  
        <!--#语句助手线程数，可设置为0，该参数会降低运行速度，但程序有大量的查询语句时，有助于提升高并发程序的性能 -->
        <property name="statementReleaseHelperThreads" value="${bonecp.statementReleaseHelperThreads}" />  
    </bean>  
    
    <context:annotation-config />
    
    <tx:annotation-driven/>
    
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!--<context:property-placeholder location="classpath*:META-INF/redis.properties,classpath*:META-INF/dbConfig.properties" />-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>file:/data/ocp/ocp_conf.properties</value>
                <!--<value>file:E:/ocp_conf.properties</value>-->
            </list>
        </property>
    </bean>
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
        <property name="dataSource" ref="dataSource" /> 
        <property name="typeAliasesPackage" value="com.rs.ocp.domain.endity" />
    </bean> 
    
    <context:component-scan base-package="com.rs.ocp.domain.dao" />
    
    <!-- Scan for mappers and let them be autowired --> 
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
        <property name="basePackage" value="com.rs.ocp.domain.mappers" /> 
    </bean>
    
    <!--redis conf-->
    <!--
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxTotal" value="${redis.maxTotal}" />  
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>  
      
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
          p:host-name="${redis.host}" p:port="${redis.port}" p:poolConfig-ref="poolConfig" />  
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" p:connectionFactory-ref="connectionFactory"/>  
    -->
</beans>
