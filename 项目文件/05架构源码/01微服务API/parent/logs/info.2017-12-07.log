2017-12-07 17:35:05,723 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7b96d0a9: startup date [Thu Dec 07 17:35:05 CST 2017]; root of context hierarchy
2017-12-07 17:35:05,843 - HV000001: Hibernate Validator 5.3.5.Final
2017-12-07 17:35:05,910 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-07 17:35:05,953 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6e4677ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-07 17:35:07,299 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19b50d5b: startup date [Thu Dec 07 17:35:07 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7b96d0a9
2017-12-07 17:35:08,468 - Multiple Spring Data modules found, entering strict repository configuration mode!
2017-12-07 17:35:08,520 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomCronDao.
2017-12-07 17:35:08,521 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomConfDao.
2017-12-07 17:35:08,524 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.UserPersonalDao.
2017-12-07 17:35:08,525 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.UserTicketDao.
2017-12-07 17:35:08,526 - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomPlanDao.
2017-12-07 17:35:08,553 - Multiple Spring Data modules found, entering strict repository configuration mode!
2017-12-07 17:35:08,595 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.MsgNotificationDao.
2017-12-07 17:35:08,596 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.UserAttentionDao.
2017-12-07 17:35:08,596 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomRecrecordDao.
2017-12-07 17:35:08,596 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomDao.
2017-12-07 17:35:08,597 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.GiftListDao.
2017-12-07 17:35:08,597 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomAttributeDao.
2017-12-07 17:35:08,597 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.ZhuboDao.
2017-12-07 17:35:08,597 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.UserBlackDao.
2017-12-07 17:35:08,597 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.IndexBannerDao.
2017-12-07 17:35:08,598 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomDeleteLogDao.
2017-12-07 17:35:08,598 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomTypeSetDao.
2017-12-07 17:35:08,598 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.UcUserDao.
2017-12-07 17:35:08,598 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomPlanStatDao.
2017-12-07 17:35:08,611 - Multiple Spring Data modules found, entering strict repository configuration mode!
2017-12-07 17:35:08,650 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomCronDao.
2017-12-07 17:35:08,650 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomConfDao.
2017-12-07 17:35:08,650 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.MsgNotificationDao.
2017-12-07 17:35:08,651 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.UserAttentionDao.
2017-12-07 17:35:08,651 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.UserPersonalDao.
2017-12-07 17:35:08,651 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.UserTicketDao.
2017-12-07 17:35:08,651 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomPlanDao.
2017-12-07 17:35:08,651 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomRecrecordDao.
2017-12-07 17:35:08,652 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomDao.
2017-12-07 17:35:08,652 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.GiftListDao.
2017-12-07 17:35:08,652 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomAttributeDao.
2017-12-07 17:35:08,652 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.ZhuboDao.
2017-12-07 17:35:08,652 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.UserBlackDao.
2017-12-07 17:35:08,652 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.IndexBannerDao.
2017-12-07 17:35:08,652 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomDeleteLogDao.
2017-12-07 17:35:08,653 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomTypeSetDao.
2017-12-07 17:35:08,653 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.UcUserDao.
2017-12-07 17:35:08,653 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.eason.api.zb.dao.RoomPlanStatDao.
2017-12-07 17:35:08,879 - BeanFactory id=6cf95cdb-7a5d-3e18-bf9a-2e15289efb6a
2017-12-07 17:35:08,902 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-07 17:35:09,007 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$522c74bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-07 17:35:09,072 - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$84591afe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-07 17:35:09,079 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6e4677ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-07 17:35:09,425 - Tomcat initialized with port(s): 8762 (http)
2017-12-07 17:35:09,431 - Starting service [Tomcat]
2017-12-07 17:35:09,432 - Starting Servlet Engine: Apache Tomcat/8.5.23
2017-12-07 17:35:09,510 - Initializing Spring embedded WebApplicationContext
2017-12-07 17:35:09,756 - Mapping servlet: 'dispatcherServlet' to [/]
2017-12-07 17:35:09,763 - Mapping filter: 'metricsFilter' to: [/*]
2017-12-07 17:35:09,763 - Mapping filter: 'characterEncodingFilter' to: [/*]
2017-12-07 17:35:09,764 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-12-07 17:35:09,764 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-12-07 17:35:09,764 - Mapping filter: 'requestContextFilter' to: [/*]
2017-12-07 17:35:09,764 - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017-12-07 17:35:09,764 - Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-12-07 17:35:10,348 - Building JPA container EntityManagerFactory for persistence unit 'default'
2017-12-07 17:35:10,356 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-12-07 17:35:10,401 - HHH000412: Hibernate Core {5.0.12.Final}
2017-12-07 17:35:10,402 - HHH000206: hibernate.properties not found
2017-12-07 17:35:10,403 - HHH000021: Bytecode provider name : javassist
2017-12-07 17:35:10,435 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-12-07 17:35:10,521 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-12-07 17:35:10,912 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-07 17:35:11,001 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-12-07 17:35:11,459 - Cluster created with settings {hosts=[192.168.0.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2017-12-07 17:35:11,574 - Opened connection [connectionId{localValue:1, serverValue:4583}] to 192.168.0.109:27017
2017-12-07 17:35:11,576 - Monitor thread successfully connected to server with description ServerDescription{address=192.168.0.109:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 10]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, roundTripTimeNanos=1147449}
2017-12-07 17:35:11,679 - Opened connection [connectionId{localValue:2, serverValue:4584}] to 192.168.0.109:27017
2017-12-07 17:35:13,023 - Cannot determine local hostname
2017-12-07 17:35:13,249 - No URLs will be polled as dynamic configuration sources.
2017-12-07 17:35:13,249 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-07 17:35:13,254 - No URLs will be polled as dynamic configuration sources.
2017-12-07 17:35:13,254 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-07 17:35:14,538 - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,539 - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2017-12-07 17:35:14,539 - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2017-12-07 17:35:14,539 - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2017-12-07 17:35:14,540 - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2017-12-07 17:35:14,540 - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,541 - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2017-12-07 17:35:14,541 - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,541 - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-12-07 17:35:14,542 - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-12-07 17:35:14,542 - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,542 - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2017-12-07 17:35:14,542 - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,543 - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2017-12-07 17:35:14,544 - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2017-12-07 17:35:14,544 - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,544 - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2017-12-07 17:35:14,544 - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2017-12-07 17:35:14,545 - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-12-07 17:35:14,545 - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,545 - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-12-07 17:35:14,545 - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,545 - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2017-12-07 17:35:14,546 - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,546 - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,546 - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,546 - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-12-07 17:35:14,724 - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19b50d5b: startup date [Thu Dec 07 17:35:07 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7b96d0a9] and template loader path [classpath:/templates/]
2017-12-07 17:35:14,854 - LiveReload server is running on port 35729
2017-12-07 17:35:15,279 - Registering beans for JMX exposure on startup
2017-12-07 17:35:15,286 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-12-07 17:35:15,289 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-12-07 17:35:15,290 - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2017-12-07 17:35:15,290 - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2017-12-07 17:35:15,290 - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2017-12-07 17:35:15,291 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-12-07 17:35:15,293 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-12-07 17:35:15,302 - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2017-12-07 17:35:15,309 - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2017-12-07 17:35:15,313 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-12-07 17:35:15,322 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=19b50d5b,type=ConfigurationPropertiesRebinder]
2017-12-07 17:35:15,325 - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2017-12-07 17:35:15,326 - Registering beans for JMX exposure on startup
2017-12-07 17:35:15,652 - Starting beans in phase 0
2017-12-07 17:35:15,659 - Setting initial instance status as: STARTING
2017-12-07 17:35:15,690 - Initializing Eureka in region us-east-1
2017-12-07 17:35:15,738 - Using JSON encoding codec LegacyJacksonJson
2017-12-07 17:35:15,738 - Using JSON decoding codec LegacyJacksonJson
2017-12-07 17:35:15,811 - Using XML encoding codec XStreamXml
2017-12-07 17:35:15,811 - Using XML decoding codec XStreamXml
2017-12-07 17:35:15,972 - Resolving eureka endpoints via configuration
2017-12-07 17:35:16,003 - Disable delta property : false
2017-12-07 17:35:16,003 - Single vip registry refresh property : null
2017-12-07 17:35:16,003 - Force full registry fetch : false
2017-12-07 17:35:16,003 - Application is null : false
2017-12-07 17:35:16,003 - Registered Applications size is zero : true
2017-12-07 17:35:16,003 - Application version is -1: true
2017-12-07 17:35:16,003 - Getting all instance registry info from the eureka server
2017-12-07 17:35:16,131 - The response status is 200
2017-12-07 17:35:16,132 - Starting heartbeat executor: renew interval is: 30
2017-12-07 17:35:16,134 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2017-12-07 17:35:16,136 - Discovery Client initialized at timestamp 1512639316136 with initial instances count: 3
2017-12-07 17:35:16,153 - Registering application service-api-zb-impl with eureka with status UP
2017-12-07 17:35:16,154 - Saw local status change event StatusChangeEvent [timestamp=1512639316154, current=UP, previous=STARTING]
2017-12-07 17:35:16,156 - DiscoveryClient_SERVICE-API-ZB-IMPL/localhost:service-api-zb-impl:8762: registering service...
2017-12-07 17:35:16,159 - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2017-12-07 17:35:16,164 - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2017-12-07 17:35:16,171 - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2017-12-07 17:35:16,173 - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2017-12-07 17:35:16,175 - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2017-12-07 17:35:16,176 - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2017-12-07 17:35:16,178 - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2017-12-07 17:35:16,180 - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2017-12-07 17:35:16,183 - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2017-12-07 17:35:16,184 - DiscoveryClient_SERVICE-API-ZB-IMPL/localhost:service-api-zb-impl:8762 - registration status: 204
2017-12-07 17:35:16,188 - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2017-12-07 17:35:16,189 - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2017-12-07 17:35:16,191 - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2017-12-07 17:35:16,192 - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2017-12-07 17:35:16,193 - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2017-12-07 17:35:16,208 - Initializing ProtocolHandler ["http-nio-8762"]
2017-12-07 17:35:16,215 - Starting ProtocolHandler ["http-nio-8762"]
2017-12-07 17:35:16,224 - Using a shared selector for servlet write/read
2017-12-07 17:35:16,238 - Tomcat started on port(s): 8762 (http)
2017-12-07 17:35:16,239 - Updating port to 8762
2017-12-07 17:40:16,006 - Resolving eureka endpoints via configuration
2017-12-07 17:45:16,007 - Resolving eureka endpoints via configuration
2017-12-07 17:50:16,009 - Resolving eureka endpoints via configuration
2017-12-07 17:55:16,010 - Resolving eureka endpoints via configuration
2017-12-07 18:00:16,011 - Resolving eureka endpoints via configuration
2017-12-07 18:05:16,013 - Resolving eureka endpoints via configuration
2017-12-07 18:10:16,014 - Resolving eureka endpoints via configuration
2017-12-07 18:15:16,015 - Resolving eureka endpoints via configuration
2017-12-07 18:20:16,016 - Resolving eureka endpoints via configuration
2017-12-07 18:25:16,017 - Resolving eureka endpoints via configuration
2017-12-07 18:30:16,018 - Resolving eureka endpoints via configuration
2017-12-07 18:35:16,020 - Resolving eureka endpoints via configuration
2017-12-07 18:40:16,021 - Resolving eureka endpoints via configuration
2017-12-07 18:45:16,022 - Resolving eureka endpoints via configuration
2017-12-07 18:50:16,025 - Resolving eureka endpoints via configuration
2017-12-07 18:55:16,026 - Resolving eureka endpoints via configuration
2017-12-07 19:00:16,028 - Resolving eureka endpoints via configuration
2017-12-07 19:05:16,029 - Resolving eureka endpoints via configuration
2017-12-07 19:10:16,030 - Resolving eureka endpoints via configuration
2017-12-07 19:15:16,032 - Resolving eureka endpoints via configuration
2017-12-07 19:20:16,033 - Resolving eureka endpoints via configuration
2017-12-07 19:25:16,034 - Resolving eureka endpoints via configuration
2017-12-07 19:30:16,035 - Resolving eureka endpoints via configuration
2017-12-07 19:35:16,037 - Resolving eureka endpoints via configuration
2017-12-07 19:40:16,038 - Resolving eureka endpoints via configuration
2017-12-07 19:45:16,039 - Resolving eureka endpoints via configuration
2017-12-07 19:50:16,039 - Resolving eureka endpoints via configuration
2017-12-07 19:55:16,040 - Resolving eureka endpoints via configuration
2017-12-07 20:00:16,041 - Resolving eureka endpoints via configuration
2017-12-07 20:05:16,042 - Resolving eureka endpoints via configuration
2017-12-07 20:10:16,043 - Resolving eureka endpoints via configuration
2017-12-07 20:15:16,045 - Resolving eureka endpoints via configuration
2017-12-07 20:20:16,045 - Resolving eureka endpoints via configuration
2017-12-07 20:25:16,047 - Resolving eureka endpoints via configuration
2017-12-07 20:30:16,049 - Resolving eureka endpoints via configuration
2017-12-07 20:35:16,050 - Resolving eureka endpoints via configuration
2017-12-07 20:40:16,051 - Resolving eureka endpoints via configuration
2017-12-07 20:45:16,052 - Resolving eureka endpoints via configuration
2017-12-07 20:50:16,053 - Resolving eureka endpoints via configuration
2017-12-07 20:55:16,055 - Resolving eureka endpoints via configuration
2017-12-07 21:00:16,056 - Resolving eureka endpoints via configuration
2017-12-07 21:05:16,057 - Resolving eureka endpoints via configuration
2017-12-07 21:10:16,058 - Resolving eureka endpoints via configuration
2017-12-07 21:15:16,059 - Resolving eureka endpoints via configuration
2017-12-07 21:20:16,060 - Resolving eureka endpoints via configuration
2017-12-07 21:25:16,061 - Resolving eureka endpoints via configuration
2017-12-07 21:30:16,062 - Resolving eureka endpoints via configuration
2017-12-07 21:35:16,063 - Resolving eureka endpoints via configuration
2017-12-07 21:40:16,063 - Resolving eureka endpoints via configuration
2017-12-07 21:45:16,065 - Resolving eureka endpoints via configuration
2017-12-07 21:50:16,066 - Resolving eureka endpoints via configuration
2017-12-07 21:55:16,068 - Resolving eureka endpoints via configuration
2017-12-07 22:00:16,068 - Resolving eureka endpoints via configuration
2017-12-07 22:05:16,070 - Resolving eureka endpoints via configuration
2017-12-07 22:10:16,071 - Resolving eureka endpoints via configuration
2017-12-07 22:15:16,072 - Resolving eureka endpoints via configuration
2017-12-07 22:20:16,073 - Resolving eureka endpoints via configuration
2017-12-07 22:25:16,075 - Resolving eureka endpoints via configuration
2017-12-07 22:30:16,076 - Resolving eureka endpoints via configuration
2017-12-07 22:35:16,077 - Resolving eureka endpoints via configuration
2017-12-07 22:40:16,078 - Resolving eureka endpoints via configuration
2017-12-07 22:45:16,079 - Resolving eureka endpoints via configuration
2017-12-07 22:50:16,080 - Resolving eureka endpoints via configuration
2017-12-07 22:55:16,081 - Resolving eureka endpoints via configuration
2017-12-07 23:00:16,082 - Resolving eureka endpoints via configuration
2017-12-07 23:05:16,083 - Resolving eureka endpoints via configuration
2017-12-07 23:10:16,084 - Resolving eureka endpoints via configuration
2017-12-07 23:15:16,085 - Resolving eureka endpoints via configuration
2017-12-07 23:20:16,086 - Resolving eureka endpoints via configuration
2017-12-07 23:25:16,087 - Resolving eureka endpoints via configuration
2017-12-07 23:30:16,088 - Resolving eureka endpoints via configuration
2017-12-07 23:35:16,089 - Resolving eureka endpoints via configuration
2017-12-07 23:40:16,090 - Resolving eureka endpoints via configuration
2017-12-07 23:45:16,091 - Resolving eureka endpoints via configuration
2017-12-07 23:50:16,093 - Resolving eureka endpoints via configuration
2017-12-07 23:55:16,094 - Resolving eureka endpoints via configuration
